/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 ./public/characters/k/k.gltf 
*/
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from "three"; 

const K = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./characters/k/k.gltf')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    const mixer = new THREE.AnimationMixer(group.current);
    if (animations[1]) {
      const animationAction = mixer.clipAction(animations[1]);
   
        animationAction.setLoop(THREE.LoopRepeat);
        animationAction.play();
   
    }
  
      const clock = new THREE.Clock();
  
      const animate = () => {
        const delta = clock.getDelta();
        mixer.update(delta);
        requestAnimationFrame(animate);
      };
  
      animate();
  
      // Clean up the animation mixer when the component unmounts
      return () => {
        mixer.stopAllAction();
      };
    }, [animations]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="K" position={[-0.663, 0, 0.379]} rotation={[0, 1.463, 0]}>
          <primitive object={nodes.Hips} />
          <primitive object={nodes.Ctrl_Master} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Left} />
          <primitive object={nodes.Ctrl_Hand_IK_Left} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Right} />
          <primitive object={nodes.Ctrl_Hand_IK_Right} />
          <primitive object={nodes.Ctrl_Foot_IK_Left} />
          <primitive object={nodes.Ctrl_LegPole_IK_Left} />
          <primitive object={nodes.Ctrl_Foot_IK_Right} />
          <primitive object={nodes.Ctrl_LegPole_IK_Right} />
          <skinnedMesh name="Wolf3D_Body003" geometry={nodes.Wolf3D_Body003.geometry} material={materials['Wolf3D_Body.003']} skeleton={nodes.Wolf3D_Body003.skeleton} />
          <skinnedMesh name="Wolf3D_Facewear" geometry={nodes.Wolf3D_Facewear.geometry} material={materials.Wolf3D_Facewear} skeleton={nodes.Wolf3D_Facewear.skeleton} />
          <skinnedMesh name="Wolf3D_Glasses002" geometry={nodes.Wolf3D_Glasses002.geometry} material={materials['Wolf3D_Glasses.002']} skeleton={nodes.Wolf3D_Glasses002.skeleton} />
          <skinnedMesh name="Wolf3D_Hair003" geometry={nodes.Wolf3D_Hair003.geometry} material={materials['Wolf3D_Hair.003']} skeleton={nodes.Wolf3D_Hair003.skeleton} />
          <skinnedMesh name="Wolf3D_Outfit_Bottom003" geometry={nodes.Wolf3D_Outfit_Bottom003.geometry} material={materials['Wolf3D_Outfit_Bottom.003']} skeleton={nodes.Wolf3D_Outfit_Bottom003.skeleton} />
          <skinnedMesh name="Wolf3D_Outfit_Footwear003" geometry={nodes.Wolf3D_Outfit_Footwear003.geometry} material={materials['Wolf3D_Outfit_Footwear.003']} skeleton={nodes.Wolf3D_Outfit_Footwear003.skeleton} />
          <skinnedMesh name="Wolf3D_Outfit_Top003" geometry={nodes.Wolf3D_Outfit_Top003.geometry} material={materials['Wolf3D_Outfit_Top.003']} skeleton={nodes.Wolf3D_Outfit_Top003.skeleton} />
          <skinnedMesh name="EyeLeft003" geometry={nodes.EyeLeft003.geometry} material={materials['Wolf3D_Eye.003']} skeleton={nodes.EyeLeft003.skeleton} morphTargetDictionary={nodes.EyeLeft003.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft003.morphTargetInfluences} />
          <skinnedMesh name="EyeRight003" geometry={nodes.EyeRight003.geometry} material={materials['Wolf3D_Eye.003']} skeleton={nodes.EyeRight003.skeleton} morphTargetDictionary={nodes.EyeRight003.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight003.morphTargetInfluences} />
          <skinnedMesh name="Wolf3D_Head003" geometry={nodes.Wolf3D_Head003.geometry} material={materials['Wolf3D_Skin.003']} skeleton={nodes.Wolf3D_Head003.skeleton} morphTargetDictionary={nodes.Wolf3D_Head003.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head003.morphTargetInfluences} />
          <skinnedMesh name="Wolf3D_Teeth003" geometry={nodes.Wolf3D_Teeth003.geometry} material={materials['Wolf3D_Teeth.003']} skeleton={nodes.Wolf3D_Teeth003.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth003.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth003.morphTargetInfluences} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./characters/k/k.gltf')

export default K;