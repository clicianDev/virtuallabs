/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 ./public/characters/luigi/luigi.gltf 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from "three"; 


const Luigi = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./characters/luigi/luigi.gltf')
  const { actions } = useAnimations(animations, group)
  
  useEffect(() => {
    const mixer = new THREE.AnimationMixer(group.current);
    if (animations[4]) {
      const animationAction = mixer.clipAction(animations[4]);
   
        animationAction.setLoop(THREE.LoopRepeat);
        animationAction.play();
   
    }
  
      const clock = new THREE.Clock();
  
      const animate = () => {
        const delta = clock.getDelta();
        mixer.update(delta);
        requestAnimationFrame(animate);
      };
  
      animate();
  
      // Clean up the animation mixer when the component unmounts
      return () => {
        mixer.stopAllAction();
      };
    }, [animations]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Luigi" position={[2.294, 0, -2.148]} rotation={[Math.PI, -1.552, Math.PI]}>
          <primitive object={nodes.Hips} />
          <primitive object={nodes.Ctrl_Master} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Left} />
          <primitive object={nodes.Ctrl_Hand_IK_Left} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Right} />
          <primitive object={nodes.Ctrl_Hand_IK_Right} />
          <primitive object={nodes.Ctrl_Foot_IK_Left} />
          <primitive object={nodes.Ctrl_LegPole_IK_Left} />
          <primitive object={nodes.Ctrl_Foot_IK_Right} />
          <primitive object={nodes.Ctrl_LegPole_IK_Right} />
          <skinnedMesh name="Wolf3D_Glasses003" geometry={nodes.Wolf3D_Glasses003.geometry} material={materials['Wolf3D_Glasses.003']} skeleton={nodes.Wolf3D_Glasses003.skeleton} />
          <skinnedMesh name="Wolf3D_Hair004" geometry={nodes.Wolf3D_Hair004.geometry} material={materials['Wolf3D_Hair.004']} skeleton={nodes.Wolf3D_Hair004.skeleton} />
          <skinnedMesh name="Wolf3D_Outfit_Bottom004" geometry={nodes.Wolf3D_Outfit_Bottom004.geometry} material={materials['Wolf3D_Outfit_Bottom.004']} skeleton={nodes.Wolf3D_Outfit_Bottom004.skeleton} />
          <skinnedMesh name="Wolf3D_Outfit_Footwear004" geometry={nodes.Wolf3D_Outfit_Footwear004.geometry} material={materials['Wolf3D_Outfit_Footwear.004']} skeleton={nodes.Wolf3D_Outfit_Footwear004.skeleton} />
          <skinnedMesh name="Wolf3D_Outfit_Top004" geometry={nodes.Wolf3D_Outfit_Top004.geometry} material={materials['Wolf3D_Outfit_Top.004']} skeleton={nodes.Wolf3D_Outfit_Top004.skeleton} />
          <skinnedMesh name="EyeLeft004" geometry={nodes.EyeLeft004.geometry} material={materials['Wolf3D_Eye.004']} skeleton={nodes.EyeLeft004.skeleton} morphTargetDictionary={nodes.EyeLeft004.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft004.morphTargetInfluences} />
          <skinnedMesh name="EyeRight004" geometry={nodes.EyeRight004.geometry} material={materials['Wolf3D_Eye.004']} skeleton={nodes.EyeRight004.skeleton} morphTargetDictionary={nodes.EyeRight004.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight004.morphTargetInfluences} />
          <skinnedMesh name="Wolf3D_Head004" geometry={nodes.Wolf3D_Head004.geometry} material={materials['Wolf3D_Skin.004']} skeleton={nodes.Wolf3D_Head004.skeleton} morphTargetDictionary={nodes.Wolf3D_Head004.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head004.morphTargetInfluences} />
          <skinnedMesh name="Wolf3D_Teeth004" geometry={nodes.Wolf3D_Teeth004.geometry} material={materials['Wolf3D_Teeth.004']} skeleton={nodes.Wolf3D_Teeth004.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth004.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth004.morphTargetInfluences} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./characters/luigi/luigi.gltf')
export default Luigi;